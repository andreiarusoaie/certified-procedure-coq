DIGEST 4db9b046db256922d47683de93937b29
Fsound
R15:18 util <> <> lib
R36:37 ml <> <> lib
R55:56 rl <> <> lib
R74:84 derivatives <> <> lib
R102:105 Coq.Lists.List <> <> lib
R123:129 Coq.Lists.ListSet <> <> lib
R147:155 Coq.Logic.Classical <> <> lib
R166:170 Coq.Arith.Arith <> <> lib
R188:192 Coq.omega.Omega <> <> lib
R230:237 ml <> <> mod
R252:253 rl <> <> mod
R255:255 sound <> <> modtype
R265:275 derivatives <> <> mod
R277:277 sound <> <> modtype
R279:279 sound <> <> modtype
modtype 208:216 <> Soundness
var 372:373 Soundness G0
R377:380 Coq.Init.Datatypes <> list ind
R382:390 sound R RLFormula def
def 430:435 Soundness remove
R442:450 sound R RLFormula def
R458:461 Coq.Init.Datatypes <> list ind
R463:471 sound R RLFormula def
R476:479 Coq.Init.Datatypes <> list ind
R481:489 sound R RLFormula def
R504:504 sound <> l var
R519:521 Coq.Init.Datatypes <> nil constr
R526:528 Coq.Init.Datatypes <> nil constr
R540:543 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R554:569 sound R RLFormula_eq_dec defax
R571:571 sound <> x var
R604:608 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R620:620 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R609:614 sound <> remove def
R616:616 sound <> x var
R583:588 sound <> remove def
R590:590 sound <> x var
ind 725:728 Soundness step
constr 795:798 Soundness impl
constr 910:913 Soundness circ
constr 1150:1152 Soundness der
R737:740 Coq.Init.Datatypes <> list ind
R742:750 sound R RLFormula def
R770:778 sound R RLFormula def
R894:897 sound <> step ind
R871:873 Coq.Init.Logic <> :type_scope:x_'='_x not
R874:879 sound Soundness remove def
R824:830 sound F ValidML def
R833:841 sound F ImpliesML defax
R852:854 sound R rhs syndef
R844:846 sound R lhs syndef
R808:809 Coq.Lists.List <> In def
R1134:1137 sound <> step ind
R1086:1088 Coq.Init.Logic <> :type_scope:x_'='_x not
R1089:1089 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1100:1105 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1121:1121 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1090:1095 sound Soundness remove def
R1106:1113 sound Def SynDerRL def
R1115:1115 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R1118:1118 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R1116:1117 sound <> c' var
R1029:1035 sound F ValidML def
R1038:1046 sound F ImpliesML defax
R1057:1061 sound F EClos def
R1064:1066 sound R lhs syndef
R1068:1068 sound <> c var
R1049:1051 sound R lhs syndef
R996:1011 sound R disjoint_vars_RL def
R1015:1016 sound <> c' var
R973:986 sound R RL_alpha_equiv defax
R990:991 sound <> c' var
R988:988 sound <> c var
R954:955 Coq.Lists.List <> In def
R959:960 sound Soundness G0 defax
R957:957 sound <> c var
R944:945 Coq.Lists.List <> In def
R1332:1335 sound <> step ind
R1288:1290 Coq.Init.Logic <> :type_scope:x_'='_x not
R1291:1291 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1302:1307 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1321:1321 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1292:1297 sound Soundness remove def
R1308:1315 sound Def SynDerRL def
R1317:1318 sound <> S' var
R1250:1268 sound R disjoint_vars_rules def
R1270:1271 sound <> S' var
R1223:1238 sound R RL_alpha_equiv_S def
R1244:1245 sound <> S' var
R1240:1242 sound R S defax
R1192:1201 sound Def SDerivable def
R1204:1206 sound R lhs syndef
R1182:1183 Coq.Lists.List <> In def
ind 1422:1426 Soundness steps
constr 1462:1465 Soundness base
constr 1484:1488 Soundness tranz
R1430:1433 Coq.Init.Datatypes <> list ind
R1435:1443 sound R RLFormula def
R1469:1473 sound <> steps ind
R1475:1476 Coq.Lists.List ListNotations :list_scope:'['_']' not
R1582:1586 sound <> steps ind
R1588:1588 sound <> G var
R1554:1558 sound <> steps ind
R1560:1561 sound <> G' var
R1523:1526 sound Soundness step ind
R1533:1533 sound <> g var
R1530:1531 sound <> G' var
R1528:1528 sound <> G var
ind 1632:1634 Soundness inF
constr 1666:1669 Soundness init
constr 1694:1700 Soundness in_step
R1641:1649 sound R RLFormula def
R1684:1686 sound <> inF ind
R1673:1674 Coq.Lists.List <> In def
R1678:1679 sound Soundness G0 defax
R1815:1817 sound <> inF ind
R1788:1790 sound <> inF ind
R1792:1793 sound <> g' var
R1776:1777 Coq.Lists.List <> In def
R1782:1783 sound <> G' var
R1779:1780 sound <> g' var
R1733:1736 sound Soundness step ind
R1740:1741 sound <> G' var
R1738:1738 sound <> G var
prf 1923:1932 Soundness valid_impl
R2040:2044 sound F SatML defax
R2056:2059 sound <> phi' var
R2052:2054 sound <> rho var
R2046:2050 sound <> gamma var
R2011:2015 sound F SatML defax
R2027:2029 sound <> phi var
R2023:2025 sound <> rho var
R2017:2021 sound <> gamma var
R1973:1979 sound F ValidML def
R1982:1990 sound F ImpliesML defax
R1996:1999 sound <> phi' var
R1992:1994 sound <> phi var
R2094:2100 sound F ValidML def
R2148:2152 sound F SatML defax
R2125:2129 sound F SatML defax
R2148:2152 sound F SatML defax
R2125:2129 sound F SatML defax
R2181:2193 sound F SatML_Implies prfax
R2181:2193 sound F SatML_Implies prfax
prf 2274:2284 Soundness shift_index
R2328:2330 Coq.Init.Logic <> :type_scope:x_'='_x not
R2314:2319 sound R Path_i def
R2327:2327 sound <> k var
R2325:2325 sound <> j var
R2321:2323 sound <> tau var
R2331:2333 sound <> tau var
R2337:2339 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R2336:2336 sound <> k var
R2340:2340 sound <> j var
R2384:2389 sound R Path_i def
R2392:2398 util Utils GPath_i def
R2413:2421 Coq.Arith.Plus <> plus_comm thm
R2413:2421 Coq.Arith.Plus <> plus_comm thm
prf 2491:2500 Soundness wf_subpath
R2555:2560 sound R wfPath def
R2563:2568 sound R Path_i def
R2574:2574 sound <> j var
R2570:2572 sound <> tau var
R2541:2546 sound R wfPath def
R2548:2550 sound <> tau var
R2619:2624 sound R wfPath def
R2627:2633 util Utils wfGPath def
R2719:2729 sound Soundness shift_index thm
R2719:2729 sound Soundness shift_index thm
R2764:2766 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R2764:2766 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R2832:2842 sound Soundness shift_index thm
R2832:2842 sound Soundness shift_index thm
R2832:2842 sound Soundness shift_index thm
R2867:2876 Coq.Arith.Plus <> plus_assoc thm
R2880:2888 Coq.Arith.Plus <> plus_comm thm
R2894:2903 Coq.Arith.Plus <> plus_assoc thm
R2867:2876 Coq.Arith.Plus <> plus_assoc thm
R2880:2888 Coq.Arith.Plus <> plus_comm thm
R2894:2903 Coq.Arith.Plus <> plus_assoc thm
prf 2970:2985 Soundness first_step_gamma
R3106:3112 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3119:3120 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3126:3128 Coq.Init.Logic <> :type_scope:x_'='_x not
R3121:3123 sound <> tau var
R3129:3132 Coq.Init.Datatypes <> Some constr
R3134:3139 sound <> gamma' var
R3083:3085 Coq.Init.Logic <> :type_scope:x_'='_x not
R3078:3080 sound <> tau var
R3086:3089 Coq.Init.Datatypes <> Some constr
R3091:3095 sound <> gamma var
R3039:3047 sound R completeN def
R3054:3064 Coq.Init.Datatypes <> S constr
R3066:3066 sound <> n var
R3049:3051 sound <> tau var
R3019:3024 sound R wfPath def
R3026:3028 sound <> tau var
R3236:3243 sound R complete def
R3360:3365 sound R wfPath def
R3368:3374 util Utils wfGPath def
R3560:3567 sound R complete def
R3585:3587 Coq.Init.Logic <> not def
R3689:3699 Coq.Init.Datatypes <> S constr
R3702:3712 Coq.Init.Datatypes <> S constr
R3689:3699 Coq.Init.Datatypes <> S constr
R3702:3712 Coq.Init.Datatypes <> S constr
prf 3827:3839 Soundness one_step_less
R3968:3970 Coq.Init.Logic <> :type_scope:x_'='_x not
R3966:3967 sound <> n0 var
R3971:3971 sound <> n var
R3929:3937 sound R completeN def
R3954:3955 sound <> n0 var
R3940:3945 sound R Path_i def
R3947:3949 sound <> tau var
R3890:3898 sound R completeN def
R3905:3915 Coq.Init.Datatypes <> S constr
R3917:3917 sound <> n var
R3900:3902 sound <> tau var
R3870:3875 sound R wfPath def
R3877:3879 sound <> tau var
R4023:4030 sound R complete def
R4125:4130 sound R wfPath def
R4133:4139 util Utils wfGPath def
R4191:4201 sound Soundness shift_index thm
R4191:4201 sound Soundness shift_index thm
R4233:4235 Coq.Init.Logic <> :type_scope:x_'='_x not
R4229:4231 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4236:4246 Coq.Init.Datatypes <> S constr
R4233:4235 Coq.Init.Logic <> :type_scope:x_'='_x not
R4229:4231 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4236:4246 Coq.Init.Datatypes <> S constr
R4287:4289 Coq.Init.Logic <> :type_scope:x_'='_x not
R4283:4285 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4290:4300 Coq.Init.Datatypes <> S constr
R4287:4289 Coq.Init.Logic <> :type_scope:x_'='_x not
R4283:4285 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4290:4300 Coq.Init.Datatypes <> S constr
R4328:4331 Coq.Logic.Classical_Prop <> NNPP thm
R4328:4331 Coq.Logic.Classical_Prop <> NNPP thm
R4358:4363 Coq.Arith.Compare_dec <> not_eq thm
R4358:4363 Coq.Arith.Compare_dec <> not_eq thm
R4410:4425 Coq.Arith.Plus <> plus_lt_compat_r thm
R4410:4425 Coq.Arith.Plus <> plus_lt_compat_r thm
R4483:4485 Coq.Init.Logic <> :type_scope:x_'='_x not
R4470:4470 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4477:4480 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4473:4475 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4486:4489 Coq.Init.Datatypes <> None constr
R4483:4485 Coq.Init.Logic <> :type_scope:x_'='_x not
R4470:4470 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4477:4480 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4473:4475 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4486:4489 Coq.Init.Datatypes <> None constr
R4507:4510 Coq.Logic.Classical_Prop <> NNPP thm
R4507:4510 Coq.Logic.Classical_Prop <> NNPP thm
R4573:4576 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4565:4568 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4560:4562 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4569:4572 Coq.Init.Datatypes <> None constr
R4595:4598 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4582:4582 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4589:4592 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4585:4587 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4599:4602 Coq.Init.Datatypes <> None constr
R4573:4576 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4565:4568 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4560:4562 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4569:4572 Coq.Init.Datatypes <> None constr
R4595:4598 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4582:4582 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4589:4592 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4585:4587 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4599:4602 Coq.Init.Datatypes <> None constr
R4860:4870 sound R terminating def
R4994:5003 Coq.Arith.Lt <> lt_n_Sm_le thm
R4994:5003 Coq.Arith.Lt <> lt_n_Sm_le thm
R5026:5041 Coq.Arith.Plus <> plus_le_compat_r thm
R5026:5041 Coq.Arith.Plus <> plus_le_compat_r thm
R5078:5088 Coq.Arith.Lt <> le_lt_or_eq thm
R5078:5088 Coq.Arith.Lt <> le_lt_or_eq thm
R5380:5395 Coq.Arith.Plus <> plus_lt_compat_r thm
R5380:5395 Coq.Arith.Plus <> plus_lt_compat_r thm
R5453:5455 Coq.Init.Logic <> :type_scope:x_'='_x not
R5441:5441 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5447:5450 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5443:5445 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5456:5459 Coq.Init.Datatypes <> None constr
R5453:5455 Coq.Init.Logic <> :type_scope:x_'='_x not
R5441:5441 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5447:5450 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5443:5445 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5456:5459 Coq.Init.Datatypes <> None constr
R5478:5481 Coq.Logic.Classical_Prop <> NNPP thm
R5478:5481 Coq.Logic.Classical_Prop <> NNPP thm
R5545:5548 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5537:5540 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R5532:5534 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5541:5544 Coq.Init.Datatypes <> None constr
R5566:5569 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R5554:5554 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5560:5563 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5556:5558 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5570:5573 Coq.Init.Datatypes <> None constr
R5545:5548 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5537:5540 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R5532:5534 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5541:5544 Coq.Init.Datatypes <> None constr
R5566:5569 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R5554:5554 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5560:5563 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5556:5558 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5570:5573 Coq.Init.Datatypes <> None constr
R5878:5888 sound R terminating def
R6010:6019 Coq.Arith.Lt <> lt_n_Sm_le thm
R6010:6019 Coq.Arith.Lt <> lt_n_Sm_le thm
R6042:6057 Coq.Arith.Plus <> plus_le_compat_r thm
R6042:6057 Coq.Arith.Plus <> plus_le_compat_r thm
R6094:6104 Coq.Arith.Lt <> le_lt_or_eq thm
R6094:6104 Coq.Arith.Lt <> le_lt_or_eq thm
prf 6363:6373 Soundness is_infinite
R6450:6459 sound R isInfinite def
R6461:6463 sound <> tau var
R6421:6430 sound R isInfinite def
R6433:6438 sound R Path_i def
R6444:6444 sound <> i var
R6440:6442 sound <> tau var
R6401:6406 sound R wfPath def
R6408:6410 sound <> tau var
R6509:6518 sound R isInfinite def
R6521:6535 util Utils isInfiniteGPath def
R6568:6573 sound R wfPath def
R6576:6582 util Utils wfGPath def
R6635:6635 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6641:6645 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6637:6639 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R6646:6647 Coq.Init.Logic <> :type_scope:'~'_x not
R6653:6653 Coq.Init.Logic <> :type_scope:'~'_x not
R6649:6651 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R6635:6635 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6641:6645 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6637:6639 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R6646:6647 Coq.Init.Logic <> :type_scope:'~'_x not
R6653:6653 Coq.Init.Logic <> :type_scope:'~'_x not
R6649:6651 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R6667:6673 Coq.Logic.Classical_Prop <> classic prfax
R6667:6673 Coq.Logic.Classical_Prop <> classic prfax
R6720:6734 Coq.Arith.Minus <> le_plus_minus_r thm
R6720:6734 Coq.Arith.Minus <> le_plus_minus_r thm
R6785:6793 Coq.Arith.Plus <> plus_comm thm
R6785:6793 Coq.Arith.Plus <> plus_comm thm
R6813:6823 sound Soundness shift_index thm
R6813:6823 sound Soundness shift_index thm
R6855:6857 Coq.Init.Logic <> not def
R6924:6934 sound Soundness shift_index thm
R6924:6934 sound Soundness shift_index thm
R6969:6969 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6975:6979 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6971:6973 Coq.Init.Logic <> :type_scope:x_'='_x not
R6980:6982 Coq.Init.Logic <> :type_scope:'~'_x not
R6988:6988 Coq.Init.Logic <> :type_scope:'~'_x not
R6984:6986 Coq.Init.Logic <> :type_scope:x_'='_x not
R6969:6969 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6975:6979 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6971:6973 Coq.Init.Logic <> :type_scope:x_'='_x not
R6980:6982 Coq.Init.Logic <> :type_scope:'~'_x not
R6988:6988 Coq.Init.Logic <> :type_scope:'~'_x not
R6984:6986 Coq.Init.Logic <> :type_scope:x_'='_x not
R7004:7010 Coq.Logic.Classical_Prop <> classic prfax
R7004:7010 Coq.Logic.Classical_Prop <> classic prfax
prf 7225:7232 Soundness one_step
R7435:7439 sound R SatRL def
R7453:7456 rl RL ::x_'=>'_x not
R7450:7452 sound <> phi var
R7457:7460 sound <> phi' var
R7445:7447 sound <> rho var
R7441:7443 sound <> tau var
R7324:7330 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7335:7345 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7372:7384 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7346:7347 Coq.Lists.List <> In def
R7355:7362 sound Def SynDerML def
R7368:7370 sound R S defax
R7364:7366 sound <> phi var
R7349:7352 sound <> phi1 var
R7385:7389 sound R SatRL def
R7415:7418 rl RL ::x_'=>'_x not
R7411:7414 sound <> phi1 var
R7419:7422 sound <> phi' var
R7406:7408 sound <> rho var
R7392:7397 sound R Path_i def
R7399:7401 sound <> tau var
R7291:7300 sound R startsFrom def
R7310:7312 sound <> phi var
R7306:7308 sound <> rho var
R7302:7304 sound <> tau var
R7271:7276 sound R wfPath def
R7278:7280 sound <> tau var
R7559:7563 sound R SatRL def
R7597:7601 sound R SatRL def
R7744:7746 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7753:7755 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7744:7746 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7753:7755 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7828:7835 sound R complete def
R7954:7964 sound Soundness shift_index thm
R7954:7964 sound Soundness shift_index thm
R8019:8029 sound Soundness shift_index thm
R8019:8029 sound Soundness shift_index thm
R8059:8069 sound Soundness is_infinite thm
R8059:8069 sound Soundness is_infinite thm
prf 8129:8142 Soundness complete_shift
R8216:8224 sound R completeN def
R8244:8246 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8242:8243 sound <> n' var
R8247:8247 sound <> i var
R8227:8232 sound R Path_i def
R8234:8236 sound <> tau var
R8173:8181 sound R completeN def
R8204:8205 sound <> n' var
R8184:8189 sound R Path_i def
R8197:8199 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8196:8196 sound <> i var
R8191:8193 sound <> tau var
R8295:8303 sound R completeN def
R8397:8407 sound Soundness shift_index thm
R8397:8407 sound Soundness shift_index thm
R8427:8436 Coq.Arith.Plus <> plus_assoc thm
R8427:8436 Coq.Arith.Plus <> plus_assoc thm
prf 8485:8496 Soundness remove_other
R8558:8559 Coq.Lists.List <> In def
R8564:8569 sound Soundness remove def
R8574:8574 sound <> G var
R8571:8572 sound <> g' var
R8561:8561 sound <> g var
R8543:8546 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R8541:8542 sound <> g' var
R8547:8547 sound <> g var
R8525:8526 Coq.Lists.List <> In def
R8530:8530 sound <> G var
R8528:8528 sound <> g var
R8726:8741 sound R RLFormula_eq_dec defax
R8726:8741 sound R RLFormula_eq_dec defax
R8774:8794 sound R RLFormula_eq_dec_true prfax
R8774:8794 sound R RLFormula_eq_dec_true prfax
R8881:8896 sound R RLFormula_eq_dec defax
R8881:8896 sound R RLFormula_eq_dec defax
prf 9056:9061 Soundness G_in_F
R9120:9122 sound Soundness inF ind
R9124:9124 sound <> g var
R9104:9105 Coq.Lists.List <> In def
R9109:9109 sound <> G var
R9107:9107 sound <> g var
R9087:9091 sound Soundness steps ind
R9093:9093 sound <> G var
R9232:9232 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9239:9243 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9234:9236 Coq.Init.Logic <> :type_scope:x_'='_x not
R9244:9245 Coq.Init.Logic <> :type_scope:'~'_x not
R9252:9252 Coq.Init.Logic <> :type_scope:'~'_x not
R9247:9249 Coq.Init.Logic <> :type_scope:x_'='_x not
R9232:9232 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9239:9243 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9234:9236 Coq.Init.Logic <> :type_scope:x_'='_x not
R9244:9245 Coq.Init.Logic <> :type_scope:'~'_x not
R9252:9252 Coq.Init.Logic <> :type_scope:'~'_x not
R9247:9249 Coq.Init.Logic <> :type_scope:x_'='_x not
R9270:9276 Coq.Logic.Classical_Prop <> classic prfax
R9270:9276 Coq.Logic.Classical_Prop <> classic prfax
R9346:9352 sound Soundness in_step constr
R9346:9352 sound Soundness in_step constr
R9460:9471 sound Soundness remove_other thm
R9460:9471 sound Soundness remove_other thm
R9499:9508 Coq.Lists.List <> in_app_iff thm
R9499:9508 Coq.Lists.List <> in_app_iff thm
R9533:9544 sound Soundness remove_other thm
R9533:9544 sound Soundness remove_other thm
R9572:9581 Coq.Lists.List <> in_app_iff thm
R9572:9581 Coq.Lists.List <> in_app_iff thm
R9606:9617 sound Soundness remove_other thm
R9606:9617 sound Soundness remove_other thm
prf 9662:9673 Soundness der_in_Delta
R9761:9762 Coq.Lists.List <> In def
R9795:9799 sound Def Delta def
R9805:9806 sound Soundness G0 defax
R9801:9803 sound R S defax
R9784:9787 rl RL ::x_'=>'_x not
R9765:9773 sound Def SynDerML' def
R9779:9783 sound <> alpha var
R9775:9777 sound <> phi var
R9788:9791 sound <> phi' var
R9732:9733 Coq.Lists.List <> In def
R9749:9750 sound Soundness G0 defax
R9739:9742 rl RL ::x_'=>'_x not
R9736:9738 sound <> phi var
R9743:9746 sound <> phi' var
R9710:9711 Coq.Lists.List <> In def
R9719:9721 sound R S defax
R9713:9717 sound <> alpha var
R9866:9867 sound Soundness G0 defax
R9904:9908 sound Def Delta def
R9993:10002 Coq.Lists.List <> in_app_iff thm
R9993:10002 Coq.Lists.List <> in_app_iff thm
R10034:10041 sound Def SynDerRL def
R10044:10052 sound Def SynDerRL' def
R10071:10080 Coq.Lists.List <> in_map_iff thm
R10071:10080 Coq.Lists.List <> in_map_iff thm
R10099:10107 sound Def SynDerML' def
R10099:10107 sound Def SynDerML' def
R10193:10200 sound Def SynDerML def
R10221:10230 Coq.Lists.List <> in_map_iff thm
R10221:10230 Coq.Lists.List <> in_map_iff thm
R10313:10317 sound Def Delta def
R10313:10317 sound Def Delta def
R10336:10345 Coq.Lists.List <> in_app_iff thm
R10336:10345 Coq.Lists.List <> in_app_iff thm
prf 10424:10439 Soundness first_transition
R10566:10572 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10585:10594 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10613:10616 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10600:10602 Coq.Init.Logic <> :type_scope:x_'='_x not
R10595:10597 sound <> tau var
R10603:10606 Coq.Init.Datatypes <> Some constr
R10608:10612 sound <> gamma var
R10636:10648 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10665:10665 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10622:10624 Coq.Init.Logic <> :type_scope:x_'='_x not
R10617:10619 sound <> tau var
R10625:10628 Coq.Init.Datatypes <> Some constr
R10630:10635 sound <> gamma' var
R10654:10658 rl RL ::x_'=>S'_x not
R10649:10653 sound <> gamma var
R10659:10664 sound <> gamma' var
R10534:10543 sound R startsFrom def
R10553:10555 sound <> phi var
R10549:10551 sound <> rho var
R10545:10547 sound <> tau var
R10495:10503 sound R completeN def
R10510:10520 Coq.Init.Datatypes <> S constr
R10522:10522 sound <> n var
R10505:10507 sound <> tau var
R10475:10480 sound R wfPath def
R10482:10484 sound <> tau var
R10721:10730 sound R startsFrom def
R10813:10819 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10834:10835 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10829:10833 sound F State defax
R10841:10843 Coq.Init.Logic <> :type_scope:x_'='_x not
R10844:10847 Coq.Init.Datatypes <> Some constr
R10849:10854 sound <> gamma' var
R10813:10819 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10834:10835 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10829:10833 sound F State defax
R10841:10843 Coq.Init.Logic <> :type_scope:x_'='_x not
R10844:10847 Coq.Init.Datatypes <> Some constr
R10849:10854 sound <> gamma' var
R10871:10886 sound Soundness first_step_gamma thm
R10871:10886 sound Soundness first_step_gamma thm
R11028:11033 sound R wfPath def
R11036:11042 util Utils wfGPath def
R11111:11114 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11103:11106 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R11107:11110 Coq.Init.Datatypes <> None constr
R11126:11129 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R11121:11123 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R11130:11133 Coq.Init.Datatypes <> None constr
R11111:11114 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11103:11106 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R11107:11110 Coq.Init.Datatypes <> None constr
R11126:11129 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R11121:11123 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R11130:11133 Coq.Init.Datatypes <> None constr
R11159:11161 Coq.Init.Logic <> not def
prf 11510:11527 Soundness disjoint_component
R11623:11637 sound R disjoint_set_RL def
R11642:11652 sound F getFreeVars defax
R11654:11656 sound <> phi var
R11639:11639 sound <> F var
R11581:11596 sound R disjoint_vars_RL def
R11612:11612 sound <> F var
R11602:11605 rl RL ::x_'=>'_x not
R11599:11601 sound <> phi var
R11606:11609 sound <> phi' var
R11560:11568 sound R wfFormula def
R11570:11570 sound <> F var
R11708:11723 sound R disjoint_vars_RL def
R11726:11738 sound R disjoint_vars def
R11758:11772 sound R disjoint_set_RL def
R11820:11828 Coq.Lists.List <> app_nil_r thm
R11820:11828 Coq.Lists.List <> app_nil_r thm
R11862:11864 Coq.Init.Logic <> not def
R11916:11922 sound R wf_free thm
R11916:11922 sound R wf_free thm
R11950:11952 sound R rhs syndef
prf 12214:12224 Soundness impl_or_der
R12431:12434 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12403:12409 sound F ValidML def
R12412:12420 sound F ImpliesML defax
R12426:12429 sound <> phi' var
R12422:12424 sound <> phi var
R12435:12444 sound Def SDerivable def
R12446:12448 sound <> phi var
R12355:12361 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12371:12372 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12373:12377 sound F SatML defax
R12389:12391 sound <> phi var
R12385:12387 sound <> rho var
R12379:12383 sound <> gamma var
R12331:12340 sound Def SDerivable def
R12342:12342 sound <> p var
R12312:12313 Coq.Lists.List <> In def
R12325:12326 sound Soundness G0 defax
R12317:12320 rl RL ::x_'=>'_x not
R12316:12316 sound <> p var
R12321:12322 sound <> p' var
R12271:12273 sound Soundness inF ind
R12279:12282 rl RL ::x_'=>'_x not
R12276:12278 sound <> phi var
R12283:12286 sound <> phi' var
R12255:12259 sound Def total def
R12827:12831 sound F EClos def
R12758:12767 sound Soundness valid_impl thm
R12827:12831 sound F EClos def
R12758:12767 sound Soundness valid_impl thm
R12868:12872 sound F EClos def
R12895:12906 sound F SatML_Exists prfax
R12895:12906 sound F SatML_Exists prfax
R12996:13000 sound Def total def
R13129:13138 sound Def SDerivable def
prf 13266:13275 Soundness cover_step
R13532:13538 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13549:13558 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13569:13572 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13559:13560 Coq.Lists.List <> In def
R13568:13568 sound <> S var
R13562:13566 sound <> alpha var
R13599:13602 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13577:13579 Coq.Init.Logic <> :type_scope:x_'='_x not
R13573:13576 sound <> phi' var
R13580:13588 sound Def SynDerML' def
R13594:13598 sound <> alpha var
R13590:13592 sound <> phi var
R13603:13607 sound F SatML defax
R13620:13623 sound <> phi' var
R13616:13618 sound <> rho var
R13609:13614 sound <> gamma' var
R13503:13507 sound F SatML defax
R13519:13521 sound <> phi var
R13515:13517 sound <> rho var
R13509:13513 sound <> gamma var
R13475:13476 sound R TS def
R13486:13491 sound <> gamma' var
R13480:13484 sound <> gamma var
R13478:13478 sound <> S var
R13452:13460 sound R wfFormula def
R13462:13462 sound <> F var
R13442:13443 Coq.Lists.List <> In def
R13447:13447 sound <> S var
R13445:13445 sound <> F var
R13409:13417 sound R wfFormula def
R13419:13419 sound <> F var
R13398:13399 Coq.Lists.List <> In def
R13403:13404 sound Soundness G0 defax
R13401:13401 sound <> F var
R13341:13355 sound R disjoint_set_RL def
R13360:13370 sound F getFreeVars defax
R13372:13374 sound <> phi var
R13357:13357 sound <> F var
R13331:13332 Coq.Lists.List <> In def
R13336:13336 sound <> S var
R13334:13334 sound <> F var
R13698:13699 sound R TS def
R13781:13784 rl RL ::x_'=>'_x not
R13794:13802 sound Def SynDerML' def
R13814:13817 rl RL ::x_'=>'_x not
R13781:13784 rl RL ::x_'=>'_x not
R13794:13802 sound Def SynDerML' def
R13814:13817 rl RL ::x_'=>'_x not
R13865:13873 sound Def SynDerML' def
R13886:13897 sound F SatML_Exists prfax
R13886:13897 sound F SatML_Exists prfax
R13918:13925 sound R FreeVars def
R13927:13927 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R13933:13934 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R13940:13940 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R13918:13925 sound R FreeVars def
R13927:13927 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R13933:13934 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R13940:13940 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R13973:13989 sound F modify_val_on_set def
R13973:13989 sound F modify_val_on_set def
R14064:14076 sound F modify_not_in thm
R14064:14076 sound F modify_not_in thm
R14100:14108 sound F SatML_And prfax
R14100:14108 sound F SatML_And prfax
R14138:14149 sound F Proposition1 prfax
R14138:14149 sound F Proposition1 prfax
R14188:14196 sound F SatML_And prfax
R14188:14196 sound F SatML_And prfax
R14230:14240 sound F modify_Sat1 prfax
R14230:14240 sound F modify_Sat1 prfax
R14290:14298 Coq.Lists.List <> incl_appl thm
R14290:14298 Coq.Lists.List <> incl_appl thm
R14317:14325 Coq.Lists.List <> incl_refl thm
R14317:14325 Coq.Lists.List <> incl_refl thm
R14344:14354 sound F modify_Sat2 prfax
R14344:14354 sound F modify_Sat2 prfax
R14453:14467 sound R disjoint_set_RL def
R14557:14567 sound F modify_Sat1 prfax
R14557:14567 sound F modify_Sat1 prfax
R14614:14621 sound R FreeVars def
R14638:14646 Coq.Lists.List <> incl_appr thm
R14638:14646 Coq.Lists.List <> incl_appr thm
R14665:14673 Coq.Lists.List <> app_nil_r thm
R14665:14673 Coq.Lists.List <> app_nil_r thm
R14690:14698 Coq.Lists.List <> incl_refl thm
R14690:14698 Coq.Lists.List <> incl_refl thm
prf 14765:14776 Soundness finite_sound
R15188:15192 sound R SatRL def
R15206:15209 rl RL ::x_'=>'_x not
R15203:15205 sound <> phi var
R15210:15213 sound <> phi' var
R15198:15200 sound <> rho var
R15194:15196 sound <> tau var
R15152:15170 sound R disjoint_vars_rules def
R15176:15176 sound <> g var
R15172:15174 sound R S defax
R15141:15142 Coq.Lists.List <> In def
R15146:15147 sound Soundness G0 defax
R15144:15144 sound <> g var
R15108:15116 sound R wfFormula def
R15118:15118 sound <> F var
R15096:15097 Coq.Lists.List <> In def
R15101:15103 sound R S defax
R15099:15099 sound <> F var
R15063:15071 sound R wfFormula def
R15073:15073 sound <> F var
R15052:15053 Coq.Lists.List <> In def
R15057:15058 sound Soundness G0 defax
R15055:15055 sound <> F var
R15018:15027 sound Def SDerivable def
R15029:15029 sound <> p var
R14999:15000 Coq.Lists.List <> In def
R15012:15013 sound Soundness G0 defax
R15004:15007 rl RL ::x_'=>'_x not
R15003:15003 sound <> p var
R15008:15009 sound <> p' var
R14970:14974 sound Def total def
R14938:14947 sound R startsFrom def
R14957:14959 sound <> phi var
R14953:14955 sound <> rho var
R14949:14951 sound <> tau var
R14908:14912 sound Soundness steps ind
R14915:14919 sound Def Delta def
R14925:14926 sound Soundness G0 defax
R14921:14923 sound R S defax
R14883:14891 sound R completeN def
R14897:14897 sound <> n var
R14893:14895 sound <> tau var
R14856:14858 sound Soundness inF ind
R14864:14867 rl RL ::x_'=>'_x not
R14861:14863 sound <> phi var
R14868:14871 sound <> phi' var
R14836:14841 sound R wfPath def
R14843:14845 sound <> tau var
R14819:14822 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R14817:14818 sound Soundness G0 defax
R14823:14824 Coq.Lists.List ListNotations :list_scope:'['_']' not
R15248:15263 util Utils custom_lt_wf_ind thm
R15248:15263 util Utils custom_lt_wf_ind thm
R15350:15359 sound R startsFrom def
R15350:15359 sound R startsFrom def
R15397:15406 sound R startsFrom def
R15464:15474 sound Soundness impl_or_der thm
R15464:15474 sound Soundness impl_or_der thm
R15543:15547 sound R SatRL def
R15615:15623 sound R completeN def
R15615:15623 sound R completeN def
R15659:15666 sound R complete def
R15814:15823 sound Soundness valid_impl thm
R15814:15823 sound Soundness valid_impl thm
R15870:15879 sound R startsFrom def
R16030:16037 sound R complete def
R16107:16111 sound Def total def
R16256:16266 sound R terminating def
R16346:16355 sound R startsFrom def
R16695:16701 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16722:16745 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16717:16721 sound F State defax
R16764:16767 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16751:16753 Coq.Init.Logic <> :type_scope:x_'='_x not
R16754:16757 Coq.Init.Datatypes <> Some constr
R16759:16763 sound <> gamma var
R16787:16791 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16808:16808 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16773:16775 Coq.Init.Logic <> :type_scope:x_'='_x not
R16776:16779 Coq.Init.Datatypes <> Some constr
R16781:16786 sound <> gamma' var
R16797:16801 rl RL ::x_'=>S'_x not
R16792:16796 sound <> gamma var
R16802:16807 sound <> gamma' var
R16695:16701 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16722:16745 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16717:16721 sound F State defax
R16764:16767 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16751:16753 Coq.Init.Logic <> :type_scope:x_'='_x not
R16754:16757 Coq.Init.Datatypes <> Some constr
R16759:16763 sound <> gamma var
R16787:16791 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16808:16808 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16773:16775 Coq.Init.Logic <> :type_scope:x_'='_x not
R16776:16779 Coq.Init.Datatypes <> Some constr
R16781:16786 sound <> gamma' var
R16797:16801 rl RL ::x_'=>S'_x not
R16792:16796 sound <> gamma var
R16802:16807 sound <> gamma' var
R16826:16841 sound Soundness first_transition thm
R16826:16841 sound Soundness first_transition thm
R16947:16956 sound R startsFrom def
R16947:16956 sound R startsFrom def
R17052:17061 sound R startsFrom def
R17247:17254 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17291:17316 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17263:17271 sound R RLFormula def
R17282:17290 sound F MLFormula defax
R17329:17355 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17317:17318 Coq.Lists.List <> In def
R17326:17328 sound R S defax
R17320:17324 sound <> alpha var
R17382:17385 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17360:17362 Coq.Init.Logic <> :type_scope:x_'='_x not
R17356:17359 sound <> phi' var
R17363:17371 sound Def SynDerML' def
R17377:17381 sound <> alpha var
R17386:17390 sound F SatML defax
R17403:17406 sound <> phi' var
R17247:17254 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17291:17316 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17263:17271 sound R RLFormula def
R17282:17290 sound F MLFormula defax
R17329:17355 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17317:17318 Coq.Lists.List <> In def
R17326:17328 sound R S defax
R17320:17324 sound <> alpha var
R17382:17385 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17360:17362 Coq.Init.Logic <> :type_scope:x_'='_x not
R17356:17359 sound <> phi' var
R17363:17371 sound Def SynDerML' def
R17377:17381 sound <> alpha var
R17386:17390 sound F SatML defax
R17403:17406 sound <> phi' var
R17424:17433 sound Soundness cover_step thm
R17424:17433 sound Soundness cover_step thm
R17510:17511 Coq.Lists.List <> In def
R17515:17517 sound R S defax
R17510:17511 Coq.Lists.List <> In def
R17515:17517 sound R S defax
R17568:17586 sound R disjoint_vars_rules def
R17633:17650 sound Soundness disjoint_component thm
R17633:17650 sound Soundness disjoint_component thm
R17726:17745 sound R disjoint_vars_RL_sym thm
R17726:17745 sound R disjoint_vars_RL_sym thm
R17863:17870 sound Soundness one_step thm
R17863:17870 sound Soundness one_step thm
R17933:17940 sound Def SynDerML def
R17959:17968 Coq.Lists.List <> in_map_iff thm
R17959:17968 Coq.Lists.List <> in_map_iff thm
R18120:18125 sound R Path_i def
R18120:18125 sound R Path_i def
R18168:18177 sound Soundness wf_subpath thm
R18168:18177 sound Soundness wf_subpath thm
R18242:18246 sound Def Delta def
R18252:18253 sound Soundness G0 defax
R18248:18250 sound R S defax
R18223:18228 sound Soundness G_in_F thm
R18242:18246 sound Def Delta def
R18252:18253 sound Soundness G0 defax
R18248:18250 sound R S defax
R18223:18228 sound Soundness G_in_F thm
R18281:18292 sound Soundness der_in_Delta thm
R18281:18292 sound Soundness der_in_Delta thm
R18319:18328 sound R startsFrom def
R18655:18659 sound R SatRL def
R18721:18730 sound R startsFrom def
R18799:18808 sound Soundness valid_impl thm
R18799:18808 sound Soundness valid_impl thm
R18920:18930 Coq.Init.Datatypes <> S constr
R18920:18930 Coq.Init.Datatypes <> S constr
R19097:19106 sound R startsFrom def
R19097:19106 sound R startsFrom def
R19148:19157 sound R startsFrom def
R19364:19368 sound F EClos def
R19371:19373 sound R lhs syndef
R19311:19320 sound Soundness valid_impl thm
R19364:19368 sound F EClos def
R19371:19373 sound R lhs syndef
R19311:19320 sound Soundness valid_impl thm
R19471:19475 sound F EClos def
R19500:19511 sound F SatML_Exists prfax
R19500:19511 sound F SatML_Exists prfax
R19694:19700 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19721:19748 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19716:19720 sound F State defax
R19767:19770 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19754:19756 Coq.Init.Logic <> :type_scope:x_'='_x not
R19757:19760 Coq.Init.Datatypes <> Some constr
R19762:19766 sound <> gamma var
R19790:19820 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19837:19837 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19776:19778 Coq.Init.Logic <> :type_scope:x_'='_x not
R19779:19782 Coq.Init.Datatypes <> Some constr
R19784:19789 sound <> gamma' var
R19826:19830 rl RL ::x_'=>S'_x not
R19821:19825 sound <> gamma var
R19831:19836 sound <> gamma' var
R19694:19700 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19721:19748 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19716:19720 sound F State defax
R19767:19770 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19754:19756 Coq.Init.Logic <> :type_scope:x_'='_x not
R19757:19760 Coq.Init.Datatypes <> Some constr
R19762:19766 sound <> gamma var
R19790:19820 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19837:19837 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19776:19778 Coq.Init.Logic <> :type_scope:x_'='_x not
R19779:19782 Coq.Init.Datatypes <> Some constr
R19784:19789 sound <> gamma' var
R19826:19830 rl RL ::x_'=>S'_x not
R19821:19825 sound <> gamma var
R19831:19836 sound <> gamma' var
R19857:19872 sound Soundness first_transition thm
R19857:19872 sound Soundness first_transition thm
R20173:20175 sound R lhs syndef
R20134:20143 sound Soundness cover_step thm
R20173:20175 sound R lhs syndef
R20134:20143 sound Soundness cover_step thm
R20373:20377 sound R SatRL def
R20406:20410 rl RL ::x_'=>'_x not
R20416:20416 rl RL ::x_'=>'_x not
R20411:20413 sound R rhs syndef
R20380:20385 sound R Path_i def
R20373:20377 sound R SatRL def
R20406:20410 rl RL ::x_'=>'_x not
R20416:20416 rl RL ::x_'=>'_x not
R20411:20413 sound R rhs syndef
R20380:20385 sound R Path_i def
R20500:20509 sound Soundness wf_subpath thm
R20500:20509 sound Soundness wf_subpath thm
R20561:20565 sound Def Delta def
R20571:20572 sound Soundness G0 defax
R20567:20569 sound R S defax
R20542:20547 sound Soundness G_in_F thm
R20561:20565 sound Def Delta def
R20571:20572 sound Soundness G0 defax
R20567:20569 sound R S defax
R20542:20547 sound Soundness G_in_F thm
R20636:20647 sound Soundness der_in_Delta thm
R20636:20647 sound Soundness der_in_Delta thm
R20724:20733 sound R startsFrom def
R20789:20799 sound Soundness shift_index thm
R20789:20799 sound Soundness shift_index thm
R20978:20982 sound R SatRL def
R21243:21247 sound F SatML defax
R21262:21270 sound Def SynDerML' def
R21243:21247 sound F SatML defax
R21262:21270 sound Def SynDerML' def
R21326:21334 sound R wfFormula def
R21326:21334 sound R wfFormula def
R21361:21377 sound R RL_alpha_equiv_wf prfax
R21361:21377 sound R RL_alpha_equiv_wf prfax
R21542:21558 sound R RL_alpha_equiv_ML prfax
R21542:21558 sound R RL_alpha_equiv_ML prfax
R21653:21661 sound Def SynDerML' def
R21705:21716 sound F SatML_Exists prfax
R21705:21716 sound F SatML_Exists prfax
R21747:21757 sound F getFreeVars defax
R21747:21757 sound F getFreeVars defax
R21787:21803 sound F modify_val_on_set def
R21787:21803 sound F modify_val_on_set def
R21893:21905 sound F modify_not_in thm
R21893:21905 sound F modify_not_in thm
R21958:21960 Coq.Init.Logic <> not def
R22092:22100 Coq.Lists.List <> app_nil_r thm
R22092:22100 Coq.Lists.List <> app_nil_r thm
R22133:22142 Coq.Lists.List <> in_app_iff thm
R22133:22142 Coq.Lists.List <> in_app_iff thm
R22196:22204 sound F SatML_And prfax
R22196:22204 sound F SatML_And prfax
R22263:22274 sound F Proposition1 prfax
R22263:22274 sound F Proposition1 prfax
R22331:22339 sound F SatML_And prfax
R22331:22339 sound F SatML_And prfax
R22400:22410 sound F modify_Sat1 prfax
R22400:22410 sound F modify_Sat1 prfax
R22479:22493 sound R ML_val_relation def
R22596:22604 Coq.Lists.List <> incl_refl thm
R22596:22604 Coq.Lists.List <> incl_refl thm
R22632:22642 sound F modify_Sat2 prfax
R22632:22642 sound F modify_Sat2 prfax
R22677:22687 sound F modify_Sat1 prfax
R22677:22687 sound F modify_Sat1 prfax
R22723:22737 sound R ML_val_relation def
R22902:22906 sound R SatRL def
R22966:22966 rl RL ::x_'=>'_x not
R22983:22987 rl RL ::x_'=>'_x not
R22967:22975 sound Def SynDerML' def
R22909:22914 sound R Path_i def
R22922:22924 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22902:22906 sound R SatRL def
R22966:22966 rl RL ::x_'=>'_x not
R22983:22987 rl RL ::x_'=>'_x not
R22967:22975 sound Def SynDerML' def
R22909:22914 sound R Path_i def
R22922:22924 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23039:23041 Coq.Init.Logic <> :type_scope:x_'='_x not
R23039:23041 Coq.Init.Logic <> :type_scope:x_'='_x not
R23065:23077 sound Soundness one_step_less thm
R23065:23077 sound Soundness one_step_less thm
R23163:23165 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R23163:23165 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R23222:23231 sound Soundness wf_subpath thm
R23222:23231 sound Soundness wf_subpath thm
R23317:23326 Coq.Lists.List <> in_app_iff thm
R23317:23326 Coq.Lists.List <> in_app_iff thm
R23373:23380 sound Def SynDerRL def
R23448:23456 sound Def SynDerRL' def
R23512:23519 sound R complete def
R23544:23551 sound R complete def
R23696:23706 sound Soundness shift_index thm
R23696:23706 sound Soundness shift_index thm
R23739:23739 Coq.Init.Logic <> :type_scope:x_'='_x not
R23755:23758 Coq.Init.Logic <> :type_scope:x_'='_x not
R23745:23748 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23754:23754 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23741:23743 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R23750:23752 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23759:23769 Coq.Init.Datatypes <> S constr
R23739:23739 Coq.Init.Logic <> :type_scope:x_'='_x not
R23755:23758 Coq.Init.Logic <> :type_scope:x_'='_x not
R23745:23748 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23754:23754 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23741:23743 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R23750:23752 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23759:23769 Coq.Init.Datatypes <> S constr
R23864:23873 sound R startsFrom def
R23999:24009 sound Soundness shift_index thm
R23999:24009 sound Soundness shift_index thm
R23999:24009 sound Soundness shift_index thm
R23999:24009 sound Soundness shift_index thm
R24053:24057 sound R SatRL def
R24234:24238 sound R SatRL def
R24315:24325 Coq.Init.Datatypes <> S constr
R24333:24336 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24342:24342 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24338:24340 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24315:24325 Coq.Init.Datatypes <> S constr
R24333:24336 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24342:24342 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24338:24340 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24399:24412 sound Soundness complete_shift thm
R24399:24412 sound Soundness complete_shift thm
R24439:24451 sound Soundness one_step_less thm
R24439:24451 sound Soundness one_step_less thm
R24501:24516 Coq.Arith.Plus <> plus_le_compat_r thm
R24501:24516 Coq.Arith.Plus <> plus_le_compat_r thm
R24592:24601 Coq.Arith.Plus <> plus_assoc thm
R24592:24601 Coq.Arith.Plus <> plus_assoc thm
R24679:24689 sound Soundness shift_index thm
R24679:24689 sound Soundness shift_index thm
R24679:24689 sound Soundness shift_index thm
R24752:24770 sound R disjoint_vars_rules def
R24796:24806 sound Soundness is_infinite thm
R24796:24806 sound Soundness is_infinite thm
R24835:24839 sound R SatRL def
R24933:24943 sound Soundness is_infinite thm
R24933:24943 sound Soundness is_infinite thm
R24971:24975 sound R SatRL def
R25101:25109 sound R wfFormula def
R25101:25109 sound R wfFormula def
R25191:25209 sound R disjoint_vars_rules def
R25263:25278 sound R disjoint_vars_RL def
R25281:25293 sound R disjoint_vars def
R25320:25334 sound R disjoint_set_RL def
R25337:25349 sound R disjoint_vars def
R25394:25396 Coq.Init.Logic <> not def
R25461:25467 sound R wf_free thm
R25461:25467 sound R wf_free thm
R25509:25516 sound R FreeVars def
R25567:25575 Coq.Lists.List <> app_nil_r thm
R25567:25575 Coq.Lists.List <> app_nil_r thm
R25785:25794 sound R startsFrom def
R25785:25794 sound R startsFrom def
R25837:25846 sound R startsFrom def
R25925:25931 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25938:25939 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25945:25947 Coq.Init.Logic <> :type_scope:x_'='_x not
R25948:25951 Coq.Init.Datatypes <> Some constr
R25953:25958 sound <> gamma' var
R25925:25931 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25938:25939 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25945:25947 Coq.Init.Logic <> :type_scope:x_'='_x not
R25948:25951 Coq.Init.Datatypes <> Some constr
R25953:25958 sound <> gamma' var
R25979:25994 sound Soundness first_step_gamma thm
R25979:25994 sound Soundness first_step_gamma thm
R26097:26101 rl RL ::x_'=>S'_x not
R26097:26101 rl RL ::x_'=>S'_x not
R26144:26149 sound R wfPath def
R26152:26158 util Utils wfGPath def
R26246:26249 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26238:26241 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R26242:26245 Coq.Init.Datatypes <> None constr
R26261:26264 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R26256:26258 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26265:26268 Coq.Init.Datatypes <> None constr
R26246:26249 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26238:26241 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R26242:26245 Coq.Init.Datatypes <> None constr
R26261:26264 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R26256:26258 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26265:26268 Coq.Init.Datatypes <> None constr
R26316:26318 Coq.Init.Logic <> not def
R26888:26889 sound R TS def
R26984:26999 sound R RL_alpha_equiv_S def
R27033:27034 Coq.Lists.List <> In def
R27053:27055 sound R S defax
R27042:27045 rl RL ::x_'=>'_x not
R27033:27034 Coq.Lists.List <> In def
R27053:27055 sound R S defax
R27042:27045 rl RL ::x_'=>'_x not
R27164:27165 sound R TS def
R27164:27165 sound R TS def
R27244:27245 sound R TS def
R27267:27283 sound R RL_alpha_equiv_ML prfax
R27267:27283 sound R RL_alpha_equiv_ML prfax
R27458:27472 sound R ML_val_relation def
R27518:27532 sound R ML_val_relation def
R27630:27639 sound Soundness cover_step thm
R27630:27639 sound Soundness cover_step thm
R27841:27845 sound R SatRL def
R27871:27874 rl RL ::x_'=>'_x not
R27848:27853 sound R Path_i def
R27841:27845 sound R SatRL def
R27871:27874 rl RL ::x_'=>'_x not
R27848:27853 sound R Path_i def
R27962:27971 sound Soundness wf_subpath thm
R27962:27971 sound Soundness wf_subpath thm
R28056:28065 Coq.Lists.List <> in_app_iff thm
R28056:28065 Coq.Lists.List <> in_app_iff thm
R28112:28119 sound Def SynDerRL def
R28122:28130 sound Def SynDerRL' def
R28133:28140 sound Def SynDerML def
R28166:28175 Coq.Lists.List <> in_map_iff thm
R28166:28175 Coq.Lists.List <> in_map_iff thm
R28260:28269 Coq.Lists.List <> in_map_iff thm
R28260:28269 Coq.Lists.List <> in_map_iff thm
R28410:28419 sound R startsFrom def
R28526:28530 sound R SatRL def
R28578:28582 sound R SatRL def
R28769:28779 Coq.Init.Datatypes <> S constr
R28787:28789 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28769:28779 Coq.Init.Datatypes <> S constr
R28787:28789 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28840:28852 sound Soundness one_step_less thm
R28840:28852 sound Soundness one_step_less thm
R28979:28989 sound Soundness shift_index thm
R28979:28989 sound Soundness shift_index thm
R29043:29053 sound Soundness is_infinite thm
R29043:29053 sound Soundness is_infinite thm
R29114:29132 sound R disjoint_vars_rules def
R29166:29167 Coq.Lists.List <> In def
R29166:29167 Coq.Lists.List <> In def
R29231:29245 sound R disjoint_set_RL def
R29266:29281 sound R disjoint_vars_RL def
R29284:29296 sound R disjoint_vars def
R29348:29350 Coq.Init.Logic <> not def
R29434:29441 sound R FreeVars def
R29469:29477 Coq.Lists.List <> app_nil_r thm
R29469:29477 Coq.Lists.List <> app_nil_r thm
R29505:29511 sound R wf_free thm
R29505:29511 sound R wf_free thm
R29629:29645 sound R RL_alpha_equiv_wf prfax
R29629:29645 sound R RL_alpha_equiv_wf prfax
R29742:29759 sound R RL_alpha_equiv_sym prfax
R29742:29759 sound R RL_alpha_equiv_sym prfax
R29908:29924 sound R RL_alpha_equiv_wf prfax
R29908:29924 sound R RL_alpha_equiv_wf prfax
R29991:30008 sound R RL_alpha_equiv_sym prfax
R29991:30008 sound R RL_alpha_equiv_sym prfax
prf 30213:30217 Soundness sound
R30541:30547 sound R SatTS_G def
R30549:30550 sound Soundness G0 defax
R30499:30503 sound Soundness steps ind
R30506:30510 sound Def Delta def
R30516:30517 sound Soundness G0 defax
R30512:30514 sound R S defax
R30465:30473 sound R wfFormula def
R30475:30475 sound <> F var
R30453:30454 Coq.Lists.List <> In def
R30458:30460 sound R S defax
R30456:30456 sound <> F var
R30408:30416 sound R wfFormula def
R30418:30418 sound <> F var
R30397:30398 Coq.Lists.List <> In def
R30402:30403 sound Soundness G0 defax
R30400:30400 sound <> F var
R30351:30360 sound Def SDerivable def
R30362:30362 sound <> p var
R30332:30333 Coq.Lists.List <> In def
R30345:30346 sound Soundness G0 defax
R30337:30340 rl RL ::x_'=>'_x not
R30336:30336 sound <> p var
R30341:30342 sound <> p' var
R30270:30288 sound R disjoint_vars_rules def
R30294:30294 sound <> g var
R30290:30292 sound R S defax
R30259:30260 Coq.Lists.List <> In def
R30264:30265 sound Soundness G0 defax
R30262:30262 sound <> g var
R30221:30225 sound Def total def
R30627:30628 sound Soundness G0 defax
R30727:30734 sound R complete def
R30801:30805 sound R SatRL def
R30870:30881 sound Soundness finite_sound thm
R30870:30881 sound Soundness finite_sound thm
R31018:31021 sound Soundness init constr
R31018:31021 sound Soundness init constr
R36077:36085 sound <> <> modtype
